The ``0-add_integer`` module

Importing the function from the module:
	>>> add_integer = __import__('0-add_integer').add_integer

Checking regular addition:
	>>> add_integer(2, 3)
	5

Checking positive with negative:
	>>> add_integer(2, -4)
	-2

Checking negative with positive:
	>>> add_integer(-6, 8)
	2

Checking no args:
	>>> add_integer()
	Traceback (most recent call last):
		...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Checking one arg:
	>>> add_integer(1)
	99

Checking addition over multiple values:
	>>> [add_integer(i, i ** 2) for i in range(6)]
	[0, 2, 6, 12, 20, 30]

Checking float with int:
	>>> add_integer(2.1, 4)
	6

Checking int with float:
	>>> add_integer(5, 7.8)
	12

Checking both float:
	>>> add_integer(2.45, 3.1)
	5

checking int with str
	>>> add_integer(3, "2")
	Traceback (most recent call last):
	 	...
	TypeError: b must be an integer

Cannot convert float NaN to integer:
	>>> add_integer(float('nan'), 2)
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer

Long integer:
	>>> add_integer(999999999999999999999999999999999, 1)
	1000000000000000000000000000000000

OverflowError:
	>>> add_integer(1.7*10**1000, 1.7*10**1000)
	Traceback (most recent call last):
		...
	OverflowError: int too large to convert to float
	>>> 
